Feature 1: Multiple sessions
- Server:
	- User struct now holds an array of joined sessions
	- When joining a session, the server makes sure the user is not already in it
	- Leaving a session now requires a session id and returns a packet:
		- When leaving a session, the server does the following:
			1. Does the session exist? -> return NAK if it doesnn't
			2. Is the user in the session> -> return NAK if they aren't
			3. Leave the session and return an ACK
	- Logout leaves all sessions and doesn't return any acknowledgements to the client
- Client:
	- The client has a counter that keeps track of how many sessions they are in
	- Recieve thread now handles the LS_NAK and LS_ACK packets
	- Modified leavesession command: /leavesession <session_id>

Feature 2: Whisper
- Server:
	- Now handles WHISPER packet
	- Performs the following actions:
		1. Check if specified user exists -> return NAK if they don't
		2. Check if specified user is logged in -> return NAK if they aren't
		3. Check if user is trying to send a whisper message to themselves -> return NAK if so
		3. Send a MESSAGE packet to specified user with private message
- Client:
	- new command: /whisper <user_id> <message>
	- if logged in, sends WHISPER packet to server
	- recieve thread gets either a W_NAK explaining why the whisper failed or a MESSAGE packet with the message
	- prevents client from creating a session with id "private" because this word is used to visually distinguish a whisper message from a session broadcast